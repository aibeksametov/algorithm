#include <iostream>
#include <conio.h>
#include <random>
#include <time.h>
 
using namespace::std;
 
char name1[30]; 
char name2[30]; 
char table[3][3]; 
bool step; 
 
void writetable() 
{
    int l = 0;
 
    for (int i(0); i < 3; i++)
    {
        for (int j(0); j < 3; j++)
        {
            table[i][j] = char(49 + l);
            l++;
        }
    }
}
 
bool game()
{
    for (int i(0); i < 3; i++) 
    {
        for (int j(0); j < 3; j++)
        {
            cout << "|" << table[i][j] << " ";
        }
        cout << "|";
        cout << endl;
    }
    cout << endl;
 
    
    if (step) 
        cout << "Goes " << name1 << " : ";
    else cout << "Goes  " << name2 << " : ";
 
    int n;
    cin >> n; 
    if (n<1 || n>9) 
        return false;
 
    int i, j;
 
    if (n % 3 == 0)
    {
        i = (n / 3) - 1;
        j = 2;
    }
    else
    {
        j = ( n % 3 )- 1;
        i = n / 3;
    }
 
    if (table[i][j] == 'O' || table[i][j] == 'X')
        return false;
    
        if (step)
        {
            table[i][j] = 'X';
            step = false;
        }
        else
        {
            table[i][j] = 'O';
            step = true;
        }
 
        return true;
    
}
 
 
void wins()
{
    system(" ");
    if (step)
        cout << "Wins: " << name2 << endl;
    else cout << "Wins: " << name1 << endl;
}
 
void draw()
{
    system(" ");
    cout << "Draw";
}
 
bool win() 
{
    for (int i(0); i < 3;i++)
    if ((table[i][0] == table[i][1]) && (table[i][0] == table[i][2]))
    {
        wins();
        return true;
    }
    else
    if ((table[0][i] == table[1][i]) && (table[0][i] == table[2][i]))
    {
        wins();
        return true;
    }
    else if (((table[0][0] == table[1][1]) && (table[0][0] == table[2][2])) || ((table[0][2] == table[1][1]) && (table[0][2] == table[2][0])))
    {
        wins();
        return true;
    }
    else if (((table[0][0] == 'O') || (table[0][0] == 'X')) && ((table[0][1] == 'O') || (table[0][1] == 'X')) && ((table[0][2] == 'O') || (table[0][2] == 'X')) && ((table[1][0] == 'O') || (table[1][0] == 'X')) && ((table[1][1] == 'O') || (table[1][1] == 'X')) && ((table[1][2] == 'O') || (table[1][2] == 'X')) && ((table[2][0] == 'O') || (table[2][0] == 'X')) && ((table[2][1] == 'O') || (table[2][1] == 'X')) && ((table[2][2] == 'O') || (table[2][2] == 'X')))
    {
        draw();
        return true;
    }
    return false;
}
 
 
int main()
{
    writetable();
    getch();
    system(" ");
 
    cout << "Enter 1st player name: ";
    cin >> name1;
    cout << "Enter 2nd player name: ";
    cin >> name2;
 
    srand(time(NULL));
    if (rand() & 1)
        step = true;
    else step = false;
 
    while (!win())
    {
        system(" ");
        if (!game())
        {
            cout << "ERROR!";
            getch();
        }
    }
 
 
    getch();
    return 0;
 
}
